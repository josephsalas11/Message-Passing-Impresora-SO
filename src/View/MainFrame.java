/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.FunctionManager;
import Model.Log;
import java.util.ArrayList;

/**
 *
 * @author Joseph Salas
 */
public class MainFrame extends javax.swing.JFrame {

    MainPrinter printer;    
    WordUI editor;
    
    
    private ArrayList<MainPrinter> printers = new ArrayList<>();
    private ArrayList<WordUI> editors = new ArrayList<>();
    private FunctionManager functionManager = FunctionManager.getInstance();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        logArea.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        printerBtn = new javax.swing.JButton();
        editorBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        updateLogBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        printerBtn.setText("Nueva Impresora");
        printerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printerBtnActionPerformed(evt);
            }
        });

        editorBtn.setText("Nuevo Editor");
        editorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorBtnActionPerformed(evt);
            }
        });

        logArea.setColumns(20);
        logArea.setRows(5);
        jScrollPane1.setViewportView(logArea);

        updateLogBtn.setText("Actualizar Log");
        updateLogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateLogBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(printerBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(editorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(updateLogBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editorBtn)
                    .addComponent(updateLogBtn))
                .addGap(18, 18, 18)
                .addComponent(printerBtn)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printerBtnActionPerformed

       NamePrinter namePrinter = new NamePrinter(); 
       namePrinter.setVisible(true);
       //printer = new MainPrinter();
       //printer.setVisible(true);
       //printers.add(printer);
     
      
       
       
    }//GEN-LAST:event_printerBtnActionPerformed

    private void editorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorBtnActionPerformed
        NameEditor nameEditor = new NameEditor();
        nameEditor.setVisible(true);
        //editors.add(nameEditor);
    }//GEN-LAST:event_editorBtnActionPerformed

    private void updateLogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateLogBtnActionPerformed
         String logs = getLogs();
         logArea.setText(logs);
    }//GEN-LAST:event_updateLogBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
     public String getLogs(){
            String logs = "";
            for (int y = 0; y < Log.getInstance().getLogs().size(); y++) 
            {
                
                logs += Log.getInstance().getLogs().get(y).getDetail() + "\n";
                
            }
            return logs;
        }
        
        public String getProcessLogs(int sourceId, int logsQuantity){
            ArrayList<String> logMessages = Log.getInstance().getProcessLog(sourceId) ;
            String logs = "";
            if(logsQuantity == -1){
                for (int y = 0; y < logMessages.size(); y++) 
                {
                    logs += Log.getInstance().getLogs().get(y).getDetail() + "\n";
                }
            }
            else{
                int index = logMessages.size()-1;
                while(logsQuantity > 0 && index >=0){
                    logs += Log.getInstance().getLogs().get(index).getDetail() + "\n";
                    index--;
                    logsQuantity--;
                }/*
                for (int y = 0; y < logsQuantity; y++) 
                {
                    logs += Log.getInstance().getLogs().get(y).getDetail() + "\n";
                    index--;
                }*/
            }
            return logs;
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editorBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea logArea;
    private javax.swing.JButton printerBtn;
    private javax.swing.JButton updateLogBtn;
    // End of variables declaration//GEN-END:variables
}
